集中式和分布式版本控制系统有什么区别；

先说集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，
然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，
改完了，再放回图书馆。

集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，
可能提交一个10M的文件就需要5分钟，这还不得把人给憋死啊。


那分布式版本控制系统与集中式版本控制系统有何不同呢？首先，分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，
这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？
比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。

和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，
随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。

在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，
两台电脑互相访问不了，也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，
但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。



当然，Git的优势不单是不必联网这么简单，后面我们还会看到Git极其强大的分支管理，把SVN等远远抛在了后面。

CVS作为最早的开源而且免费的集中式版本控制系统，直到现在还有不少人在用。由于CVS自身设计的问题，会造成提交文件不完整，
版本库莫名其妙损坏的情况。同样是开源而且免费的SVN修正了CVS的一些稳定性问题，是目前用得最多的集中式版本库控制系统。

除了免费的外，还有收费的集中式版本控制系统，比如IBM的ClearCase（以前是Rational公司的，被IBM收购了），特点是安装比Windows还大，
运行比蜗牛还慢，能用ClearCase的一般是世界500强，他们有个共同的特点是财大气粗，或者人傻钱多。

微软自己也有一个集中式版本控制系统叫VSS，集成在Visual Studio中。由于其反人类的设计，连微软自己都不好意思用了。

分布式版本控制系统除了Git以及促使Git诞生的BitKeeper外，还有类似Git的Mercurial和Bazaar等。这些分布式版本控制系统各有特点，
但最快、最简单也最流行的依然是Git！

1.创建版本库：

在电脑本地，指定一个你喜欢的文件夹，输入pwd查看文件路径，然后在你喜欢的路径下面输入 git init + pwd显示的路径，
这时电脑会提醒你Initialized empty Git repository in /Users/michael/learngit/.git/
这是一个空仓库，在/Users/michael/learngit/.git/里面
然后touch +文件名创建一个文件，  例： touch readme.txt（创建一个txt文档）
然后vi + 文件名编辑文件，
在文件内输入 ：Git是一个版本控制系统。然后保存。
然后使用命令 git add + 文件名 把文件添加到仓库内（暂存区）。
输入后无任何显示，就说明已经添加进去了
然后输入 git commit -m "" ， ""内添加你这次提交的说明，把内容进行提交，提交到仓库内。
然后显示
[master (root-commit) eaadf4e] wrote a readme file
1 file changed, 2 insertions(+)     1 file changed：1个文件被改动
create mode 100644 readme.txt       1 insertions：插入了一行内容
类似于这样的字段 说明提交成功

为什么需要git add  和 git commit 两个步骤：
因为git commit 可以一次提交多个文件，，所以你可以多次使用git add添加不同的文件，
然后使用git commit 一次性把多个文件一起提交。

输入git add readme.txt，得到错误：fatal: not a git repository (or any of the parent directories)。

Git命令必须在Git仓库目录内执行（git init除外），在仓库目录外执行是没有意义的。

输入git add readme.txt，得到错误fatal: pathspec 'readme.txt' did not match any files。

添加某个文件时，该文件必须在当前目录下存在，用ls或者dir命令查看当前目录的文件，看看文件是否存在，或者是否写错了文件名。

总结： 初始化一个git仓库：git init
      添加文件到git仓库需要两步:1、git add 《文件名》、
                            2、git commit -m "《提交说明》"。